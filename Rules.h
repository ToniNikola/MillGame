#pragma once
#include <array>
#include <vector>


class Rules
{
private:

	std::array<std::vector<int>, 24> m_NeighbourRules
	{
		// FIX ME
	std::vector<int> {2,8},			//1
	std::vector<int> {1,3},			//2
	std::vector<int> {2,4},			//3
	std::vector<int> {3,5},			//4
	std::vector<int> {4,6},			//5 
	std::vector<int> {5,7},			//6 
	std::vector<int> {6,8},			//7
	std::vector<int> {1,16,7},		//8
	std::vector<int> {10,16},		//9
	std::vector<int> {2,9,11,18},	//10
	std::vector<int> {10,12},		//11
	std::vector<int> {4,11,13,20},	//12
	std::vector<int> {12,14},		//13
	std::vector<int> {6,13,15,22},	//14
	std::vector<int> {14,16},		//15
	std::vector<int> {8,9,15,24},	//16
	std::vector<int> {18,24},		//17
	std::vector<int> {10,17,19},	//18
	std::vector<int> {18,20},		//19
	std::vector<int> {12,19,21},	//20
	std::vector<int> {20,22},		//21
	std::vector<int> {14,21,23},	//22
	std::vector<int> {22,24},		//23
	std::vector<int> {16,17,23},	//24
	};

	std::vector<std::vector<std::vector<int>>> m_MlinRules
	{
		// typedef std::pair<int, int> Combination ?
		// std::array<std::vector<std::pair<int, int>>, 24>
		{ {2,3},	{8,7}	},	//1
		{ {1,3},	{10,18}	},	//2
		{ {1,2},	{4,5}	},	//3
		{ {3,5},	{12,20}	},	//4
		{ {3,4},	{6,7}	},	//5
		{ {5,7},	{14,22}	},	//6
		{ {1,8},	{5,6}	},	//7
		{ {1,7},	{16,24}	},	//8
		{ {10,11},	{15,16}	},	//9
		{ {2,18},	{9,11}	},	//10
		{ {9,10},	{12,13}	},	//11
		{ {4,20},	{11,13}	},	//12
		{ {11,12},	{14,15}	},	//13
		{ {6,22},	{13,15}	},	//14
		{ {9,16},	{13,14}	},	//15
		{ {8,24},	{9,15}	},	//16
		{ {18,19},	{23,24}	},	//17
		{ {2,10},	{17,19}	},	//18
		{ {17,18},	{20,21}	},	//19
		{ {4,12},	{19,21}	},	//20
		{ {19,20},	{22,23}	},	//21
		{ {6,14},	{21,23}	},	//22
		{ {17,24},	{21,22}	},	//23
		{ {8,16},	{17,23}	}	//24
	};

public:

	std::vector<int>& getNeighbourRules(int position);
	// const&
	std::vector<std::vector<int>> getMlinRules(int position);
};

/*
	int m_MlinRules[24][2][2]
	{
		{ {2,3},	{8,7}	},	//1
		{ {1,3},	{10,18}	},	//2
		{ {1,2},	{4,5}	},	//3
		{ {3,5},	{12,20}	},	//4
		{ {3,4},	{6,7}	},	//5
		{ {5,7},	{14,22}	},	//6
		{ {1,8},	{5,6}	},	//7
		{ {1,7},	{16,24}	},	//8
		{ {10,11},	{15,16}	},	//9
		{ {2,18},	{9,11}	},	//10
		{ {9,10},	{12,13}	},	//11
		{ {4,20},	{11,13}	},	//12
		{ {11,12},	{14,15}	},	//13
		{ {6,22},	{13,15}	},	//14
		{ {9,16},	{13,14}	},	//15
		{ {8,24},	{9,15}	},	//16
		{ {18,19},	{23,24}	},	//17
		{ {2,10},	{17,19}	},	//18
		{ {17,18},	{20,21}	},	//19
		{ {4,12},	{19,21}	},	//20
		{ {19,20},	{22,23}	},	//21
		{ {6,14},	{21,23}	},	//22
		{ {17,24},	{21,22}	},	//23
		{ {8,16},	{17,23}	}	//24
	};
*/